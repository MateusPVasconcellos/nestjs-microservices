generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(cuid())
  email      String   @unique @db.VarChar(50)
  password   String   @db.VarChar(100)
  active     Boolean  @default(false)
  role_id    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  userDetail  UserDetail?
  userAddress UserAddress?
  roleEnum    UserRoleEnum? @relation(fields: [role_id], references: [id])

  @@index([id, email])
}

model UserDetail {
  id           String   @id @default(cuid())
  name         String   @db.VarChar(100)
  phone_number String?  @db.VarChar(20)
  avatar_url   String?  @db.VarChar(200)
  type_person  String   @db.Char(1)
  cpf_cnpj     String   @db.VarChar(14)
  user_id      String   @unique
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt

  user User @relation(fields: [user_id], references: [id])

  @@index([user_id, cpf_cnpj, name])
}

model UserAddress {
  id         String   @id @default(cuid())
  cep        String   @db.Char(8)
  uf         String   @db.Char(2)
  address    String   @db.VarChar(100)
  city       String   @db.VarChar(50)
  number     String   @db.VarChar(50)
  district   String   @db.VarChar(50)
  user_id    String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user User @relation(fields: [user_id], references: [id])

  @@index([user_id, city, district, uf])
}

model UserRoleEnum {
  id          String   @id @default(cuid())
  role        String   @db.VarChar(20)
  permissions String[]
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  user User[]

  @@index([id])
}
